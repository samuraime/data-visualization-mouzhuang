{"version":3,"sources":["data/south.png","constants/color.js","components/Counter.js","components/MapChart.js","components/Title.js","components/Label.js","components/Progress.js","components/PanelChart.js","components/RankChart.js","components/Table.js","utils/index.js","data/source.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","white","pink","cyan","darkBlue","Counter","_this$props","this","props","value","other","Object","objectWithoutProperties","numbers","toString","padStart","split","react_default","a","createElement","map","number","i","key","transform","concat","fill","width","height","rx","ry","dx","y","textAnchor","alignmentBaseline","PureComponent","MapChart","getColor","id","area","_this","dataset","find","_ref","mid","areaValue","color","_ref2","_this2","totalWidth","totalHeight","records","box","projection","d3","center","scale","translate","geoPath","getClipPathId","chinaMap","features","d","properties","stroke","className","x","Counter_Counter","_projection","cp","_projection2","slicedToArray","cx","cy","exists","_ref3","length","clipPath","href","southSea","Title","children","fontSize","defaultProps","Label","state","trend","nextProps","setState","Math","sign","label","dot","percent","decimal","textProps","r","assign","toFixed","Progress","max","currentWidth","radius","PanelChart","ratio","innerCircleLength","PI","gradientUnits","x1","y1","x2","y2","offset","stopColor","strokeWidth","strokeDasharray","strokeDashoffset","Array","radian","innerRadius","cos","sin","opacity","abs","RankChart","list","barHeight","labelWidth","Table","meta","rows","offsetMap","lodash","sumBy","slice","slicedList","clipPathId","index","rowHeight","name","react_transition_group","component","item","timeout","classNames","enter","enterActive","exit","exitActive","_ref4","ellipsis","text","fontWidth","avaliableWidth","string","chars","findIndex","char","sliced","sum","c","test","substr","ellipsisText","random","min","start","end","targetStart","targetEnd","RangeError","limit","source","Rx","BehaviorSubject","recordCount","reviewsCount","onlineCount","returnRatio","complaintRatio","reviews","orders","returns","ranks","areas","delay","fn","time","arguments","undefined","setInterval","setTimeout","next","getValue","generate","pool","reviewsPool","returnsPool","ordersPool","date","moment","format","formatDate","getItems","count","_meta$key","objectSpread","orderId","replace","userName","asteriskName","current","floor","Date","now","areasPool","range","apply","toConsumableArray","areasSum","withValues","v","origin","ceil","sorted","reverse","sortBy","sliceIndex","getAreas","rankStandards","getRanks","App","dataSource","subscribe","unsubscribe","_this$state","viewBox","headerHeight","PanelChart_PanelChart","Label_Label","Table_Table","MapChart_MapChart","RankChart_RankChart","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.0af9a01e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/south.786402c1.png\";","export const black = '#090917';\nexport const white = '#fff';\nexport const pink = '#ff006c';\nexport const blue = '#3b5ef3';\nexport const cyan = '#7f93c4';\nexport const darkBlue = '#0b112b';\n","/* eslint react/no-array-index-key: 0 */\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { white, pink } from '../constants/color';\n\nexport default class Counter extends PureComponent {\n  render() {\n    const { value, ...other } = this.props;\n    const numbers = value.toString().padStart(4, '0').split('');\n    const height = 25;\n    return (\n      <g {...other}>\n        {numbers.map((number, i) => (\n          <g key={i} transform={`translate(${20 * i}, 0)`}>\n            <rect fill={pink} width={18} height={25} rx={3} ry={3} />\n            <text fill={white} dx={9} y={height / 2} textAnchor=\"middle\" alignmentBaseline=\"central\">{number}</text>\n          </g>\n        ))}\n      </g>\n    );\n  }\n}\n\nCounter.propTypes = {\n  value: PropTypes.number.isRequired,\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport chinaMap from '../constants/china.json';\nimport Counter from './Counter';\nimport southSea from '../data/south.png';\n\nexport default class MapChart extends PureComponent {\n  getColor = (id) => {\n    const legends = [\n      { color: '#ff006c', value: 3 },\n      { color: '#4a86ff', value: 2 },\n      { color: '#1f3db6', value: 1 },\n      { color: '#13264f', value: 0 },\n    ];\n    const area = this.props.dataset.find(({ id: mid }) => id === mid);\n    const areaValue = area ? area.value : 0;\n    return legends.find(({ value }) => areaValue >= value || value === 0).color;\n  }\n  render() {\n    const {\n      width: totalWidth, height: totalHeight, records, dataset, ...other\n    } = this.props;\n    const box = {\n      top: 60, right: 0, bottom: 0, left: 0,\n    };\n    const width = totalWidth - box.left - box.right;\n    const height = totalHeight - box.top - box.bottom;\n    const projection = d3.geoMercator()\n      .center([104.1, 35])\n      .scale(500)\n      .translate([width / 2, height / 2]);\n    const geoPath = d3.geoPath().projection(projection);\n    const getClipPathId = id => `area-${id}`;\n    return (\n      <g {...other}>\n        <defs>\n          {chinaMap.features.map(d => (\n            <clipPath key={d.properties.id} id={getClipPathId(d.properties.id)}>\n              <path\n                d={geoPath(d)}\n                stroke=\"#090a19\"\n              />\n            </clipPath>\n          ))}\n        </defs>\n        <g\n          className=\"title\"\n          transform={`translate(0, ${box.top / 2})`}\n        >\n          <text x={300} textAnchor=\"end\" alignmentBaseline=\"central\" fill=\"#fff\">当前实时回传记录数：</text>\n          <Counter value={records} transform=\"translate(300, -12.5)\" />\n        </g>\n        <g className=\"map\" transform={`translate(0, ${box.top})`}>\n          {chinaMap.features.map((d) => {\n            const { properties } = d;\n            const [cx, cy] = projection(properties.cp);\n            const exists = !!dataset.find(({ id }) => id === properties.id);\n            return (\n              <g key={properties.id}>\n                <path\n                  d={geoPath(d)}\n                  fill=\"#13264f\"\n                  stroke=\"#090a19\"\n                />\n                {}\n                {exists &&\n                  <circle\n                    key={dataset.length ? dataset[0].key : ''}\n                    className=\"map-circle-animation\"\n                    clipPath={`url(#${getClipPathId(properties.id)})`}\n                    cx={cx}\n                    cy={cy}\n                    fill={this.getColor(properties.id)}\n                  />\n                }\n              </g>\n            );\n          })}\n          <image href={southSea} x={width - 100} y={height - 140} width={80} height={120} />\n          <rect x={width - 100} y={height - 140} width={80} height={120} fill=\"none\" stroke=\"#1e203c\" />\n        </g>\n      </g>\n    );\n  }\n}\n\nMapChart.defaultProps = {\n  width: 540,\n  height: 505,\n  records: 0,\n};\n\nMapChart.propTypes = {\n  dataset: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]).isRequired,\n    id: PropTypes.string,\n    value: PropTypes.number.isRequired,\n  })).isRequired,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  records: PropTypes.number,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { white, pink } from '../constants/color';\n\n// 定位基准为中轴线\nexport default function Title({\n  children,\n  ...other\n}) {\n  return (\n    <g {...other}>\n      <rect y={-3} width={6} height={6} fill={pink} />\n      <text\n        x={15}\n        textAnchor=\"start\"\n        alignmentBaseline=\"central\"\n        fill={white}\n        fontSize=\"14\"\n      >\n        {children}\n      </text>\n    </g>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.string.isRequired,\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { white, cyan, pink } from '../constants/color';\n\n// 定位基准为中轴线\nexport default class Label extends PureComponent {\n  state = {\n    trend: 0, // -1, 0, 1\n  }\n  componentWillReceiveProps(nextProps) {\n    if (this.props.value !== null) {\n      this.setState({\n        trend: Math.sign(nextProps.value - this.props.value),\n      });\n    }\n  }\n  render() {\n    const {\n      label, value, dot, percent, decimal, ...other\n    } = this.props;\n    const { trend } = this.state;\n    const textProps = {\n      textAnchor: 'start',\n      alignmentBaseline: 'central',\n      fontSize: 14,\n    };\n    return (\n      <g {...other}>\n        {dot && <circle cx=\"1\" cy=\"0\" r=\"2\" fill={cyan} />}\n        <text x={10} fill={cyan} {...textProps}>\n          {label}\n          {value !== null &&\n            <tspan fill={white} {...textProps}> {value.toFixed(decimal)}{percent && ' %'}</tspan>\n          }\n          {!!trend && (\n            trend > 0\n              ? <tspan dx=\"5\" fill={pink} {...textProps}>↑</tspan>\n              : <tspan dx=\"5\" fill=\"#3046a9\" {...textProps}>↓</tspan>\n          )}\n        </text>\n      </g>\n    );\n  }\n}\n\nLabel.defaultProps = {\n  value: null,\n  decimal: 0,\n  dot: false,\n  percent: false,\n};\n\nLabel.propTypes = {\n  label: PropTypes.string.isRequired,\n  decimal: PropTypes.number,\n  value: PropTypes.number,\n  dot: PropTypes.bool,\n  percent: PropTypes.bool,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { darkBlue, pink } from '../constants/color';\n\n// 定位基准为中轴线\nexport default function Progress({\n  max, value, width, height, ...other\n}) {\n  const currentWidth = width * value / max;\n  const radius = height / 2;\n  return (\n    <g {...other}>\n      <rect y={-radius} width={width} height={height} fill={darkBlue} rx={radius} ry={radius} />\n      <rect className=\"progress-transition\" y={-radius} width={currentWidth} height={height} fill={pink} rx={radius} ry={radius} />\n    </g>\n  );\n}\n\nProgress.defaultProps = {\n  max: 100,\n  value: 0,\n  width: 265,\n  height: 7,\n};\n\nProgress.propTypes = {\n  max: PropTypes.number,\n  value: PropTypes.number,\n  width: PropTypes.number,\n  height: PropTypes.number,\n};\n","/* eslint react/no-array-index-key: 0 */\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { black, white, blue } from '../constants/color';\n\n// 以中心点为定位中心\nexport default class PanelChart extends PureComponent {\n  render() {\n    const { max, value, ...other } = this.props;\n    const ratio = max ? value / max : 0;\n    const percent = (ratio * 100).toFixed(2);\n    const radius = 50;\n    const innerRadius = 36;\n    const dotRaidus = innerRadius - 4;\n    const dotCount = 42;\n    const innerCircleLength = 2 * Math.PI * innerRadius;\n    return (\n      <g textAnchor=\"middle\" {...other}>\n        <defs>\n          {/* 这个色环只有半个 */}\n          <linearGradient id=\"chromatic\" gradientUnits=\"objectBoundingBox\" x1=\"1\" y1=\"1\" x2=\"0\" y2=\"0\">\n            <stop offset=\"0%\" stopColor=\"rgba(255, 0, 108, .5)\" />\n            <stop offset=\"100%\" stopColor=\"rgba(255, 0, 108, 1)\" />\n          </linearGradient>\n        </defs>\n        <circle cx=\"0\" cy=\"0\" r={radius} fill=\"#0f122f\" stroke=\"#303f81\" />\n        <circle\n          cx=\"0\"\n          cy=\"0\"\n          r={innerRadius}\n          fill=\"none\"\n          stroke=\"#cf2774\"\n          // stroke=\"url(#chromatic)\"\n          strokeWidth={(radius - innerRadius) * 2 - 2}\n          strokeDasharray={`${innerCircleLength}`}\n          strokeDashoffset={(ratio - 1) * innerCircleLength}\n          transform=\"rotate(90) scale(1, -1)\"\n          className=\"panel-chart-transition\"\n        />\n        <circle cx=\"0\" cy=\"0\" r={innerRadius} fill={black} />\n        {Array(dotCount).fill(0).map((a, i) => {\n          const radian = 2 * Math.PI / dotCount * i;\n          const x = dotRaidus * Math.cos(radian);\n          const y = dotRaidus * Math.sin(radian);\n          const opacity = 0.2 + 0.8 * Math.abs(radian - Math.PI / 2) / Math.PI;\n          return (\n            <circle key={i} cx={x} cy={y} r={1} fill={`rgba(49, 68, 153, ${opacity})`} />\n          );\n        })}\n        <text y={-14} fill={blue} fontSize=\"7\" alignmentBaseline=\"central\">累计评价人数</text>\n        <text y={-4} fill={blue} fontSize=\"7\" alignmentBaseline=\"central\">占比累计支付用户数</text>\n        <text y={12} fill={white} fontSize=\"12\" alignmentBaseline=\"central\">{percent}%</text>\n      </g>\n    );\n  }\n}\n\nPanelChart.propTypes = {\n  max: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { white, pink, cyan } from '../constants/color';\n\nexport default class RankChart extends PureComponent {\n  render() {\n    const { list, ...other } = this.props;\n    const labelWidth = 42;\n    const barWidth = 132;\n    const barHeight = 20;\n    const color = '#1b1b3c';\n    return (\n      <g fontSize=\"12\" {...other}>\n        {list.map(({ id, label, value }, i) => (\n          <g key={id} transform={`translate(0, ${27 * i})`}>\n            <line\n              x1={0}\n              y1={0.5}\n              x2={labelWidth}\n              y2={0.5}\n              stroke={color}\n              strokeWidth={1}\n            />\n            <line\n              x1={0}\n              y1={barHeight - 0.5}\n              x2={labelWidth}\n              y2={barHeight - 0.5}\n              stroke={color}\n              strokeWidth={1}\n            />\n            <rect\n              x={labelWidth}\n              width={barWidth}\n              height={barHeight}\n              fill={color}\n            />\n            <rect\n              className=\"rank-chart-transition\"\n              x={labelWidth}\n              width={value * barWidth / 100}\n              height={barHeight}\n              fill={pink}\n            />\n            <text\n              x={labelWidth / 2}\n              y={barHeight / 2}\n              textAnchor=\"middle\"\n              alignmentBaseline=\"central\"\n              fill={cyan}\n            >\n              {label}\n            </text>\n            <text\n              x={labelWidth + barWidth - 5}\n              y={barHeight / 2}\n              textAnchor=\"end\"\n              alignmentBaseline=\"central\"\n              fill={white}\n            >\n              {value.toFixed(3)} %\n            </text>\n          </g>\n        ))}\n      </g>\n    );\n  }\n}\n\nRankChart.propTypes = {\n  list: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]).isRequired,\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n  })).isRequired,\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport lodash from 'lodash';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { black, white, cyan } from '../constants/color';\n\n// TODO 不靠谱但是有效\nconst ellipsisText = (text, width, fontSize) => {\n  const fontWidth = fontSize / 1.414 * 0.9;\n  const avaliableWidth = width - 6;\n  const string = text.toString();\n  const chars = text.split('');\n  const index = chars.findIndex((char, i) => {\n    const sliced = chars.slice(0, i);\n    const w = lodash.sum(sliced.map(c => (/[\\w.]/.test(c) ? fontWidth : (fontWidth * 1.8))));\n    return w > avaliableWidth;\n  });\n  if (index === -1 || index + 1 >= chars.length) {\n    return string;\n  }\n  return `${string.substr(0, index - 1)}\\u2026`;\n};\n\nexport default class Table extends PureComponent {\n  render() {\n    const {\n      meta, list, rows, ...other\n    } = this.props;\n    const offsetMap = meta.map(({ width }, i) => {\n      const prev = i === 0 ? 0 : lodash.sumBy(meta.slice(0, i), 'width');\n      return prev + width / 2;\n    });\n    const rowHeight = 30;\n    const fontSize = 10;\n    const totalWidth = lodash.sumBy(meta, 'width');\n    const slicedList = list.slice(0, rows);\n    const clipPathId = `clipPath-${totalWidth}-${rows}`;\n    return (\n      <g fontSize={fontSize} {...other}>\n        <defs>\n          <clipPath id={clipPathId}>\n            <rect x={0} y={rowHeight} width={totalWidth} height={rowHeight * rows} />\n          </clipPath>\n        </defs>\n        {slicedList.concat(0).map((a, index) => (\n          meta.map(({ width }, i) => (\n            <rect\n              // eslint-disable-next-line\n              key={`${index}-${i}`}\n              x={i === 0 ? 0 : lodash.sumBy(meta.slice(0, i), 'width')}\n              y={rowHeight * index}\n              width={width}\n              height={rowHeight}\n              fill={index % 2 ? '#0b112b' : black}\n              stroke=\"#222444\"\n            />\n          ))\n        ))}\n        <text y={rowHeight / 2} fill={cyan}>\n          {meta.map(({ name, label }, i) => (\n            <tspan\n              key={name}\n              x={offsetMap[i]}\n              textAnchor=\"middle\"\n              alignmentBaseline=\"central\"\n            >\n              {label}\n            </tspan>\n          ))}\n        </text>\n        <TransitionGroup component=\"g\" clipPath={`url(#${clipPathId})`}>\n          {list.map((item, index) => (\n            <CSSTransition\n              key={item.id}\n              timeout={1000}\n              classNames={{\n                enter: 'table-item-enter',\n                enterActive: 'table-item-enter-active',\n                exit: !index ? 'table-item-exit' : 'table-item-exit no-transition',\n                exitActive: !index ? 'table-item-exit-active' : 'table-item-exit-active no-transition',\n              }}\n            >\n              <text y={rowHeight * (index + 1) + rowHeight / 2} fill={white}>\n                {meta.map(({ name, width, ellipsis }, i) => (\n                  <tspan\n                    key={`${name}-${item.id}`}\n                    x={offsetMap[i]}\n                    textAnchor=\"middle\"\n                    alignmentBaseline=\"central\"\n                  >\n                    {ellipsis\n                      ? ellipsisText(item[meta[i].name], width, fontSize)\n                      : item[meta[i].name]\n                    }\n                  </tspan>\n                ))}\n              </text>\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      </g>\n    );\n  }\n}\n\nTable.defaultProps = {\n  rows: 3,\n};\n\nTable.propTypes = {\n  rows: PropTypes.number,\n  meta: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    width: PropTypes.number.isRequired,\n  })).isRequired,\n  list: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n  })).isRequired,\n};\n","import moment from 'moment';\n\nexport const formatDate = date => moment(date).format('YYYY/M/D');\n\n/**\n * 将区间的值映射到目标区间\n */\nexport const map = (value, start, end, targetStart, targetEnd) => {\n  if (value < start || value > end) {\n    throw new RangeError();\n  }\n  return (value - start) / (end - start) * (targetEnd - targetStart) + targetStart;\n};\n\nexport const random = (min, max) => map(Math.random(), 0, 1, min, max);\n","import Rx from 'rxjs/Rx';\nimport lodash from 'lodash';\nimport { random, formatDate } from '../utils';\nimport returnsPool from './returns.json';\nimport reviewsPool from './reviews.json';\nimport ordersPool from './orders.json';\nimport areasPool from './areas.json';\n\nconst limit = (value, min, max) => {\n  if (value <= min) {\n    return min;\n  }\n  if (value >= max) {\n    return max;\n  }\n  return value;\n};\n\nconst initialState = {\n  recordCount: 0,\n  reviewsCount: 0.85,\n  onlineCount: 0,\n  returnRatio: 0,\n  complaintRatio: 0,\n  reviews: [],\n  orders: [],\n  returns: [],\n  ranks: [\n    { id: 1, label: '彩妆类', value: 0 },\n    { id: 2, label: '护肤类', value: 0 },\n    { id: 3, label: '个护类', value: 0 },\n    { id: 4, label: '香水类', value: 0 },\n  ],\n  areas: [],\n};\n\nconst source = new Rx.BehaviorSubject(initialState);\n\nconst delay = (fn, time = 0, repeat = false) => {\n  const timeFn = repeat ? setInterval : setTimeout;\n  timeFn(() => {\n    const next = fn(source.getValue());\n    source.next(next);\n  }, time);\n};\n\nconst getRanks = (ranks) => {\n  // 这四个分类之和接近100即可, 还有其他分类\n  const rankStandards = [58.768, 30.583, 7.349, 2.425];\n  return ranks.map((item, i) => ({\n    ...item,\n    value: rankStandards[i] + random(-0.005, 0.005),\n  }));\n};\n\nconst getAreas = (count) => {\n  // key与动画执行有关\n  const key = Date.now();\n  const areas = areasPool.map(({ id, range }) => ({\n    key,\n    id,\n    value: random(...range),\n  }));\n  const areasSum = lodash.sumBy(areas, 'value');\n  const withValues = areas.map((item) => {\n    const v = count * item.value / areasSum;\n    return {\n      ...item,\n      origin: v,\n      value: Math.ceil(v),\n    };\n  });\n  const sorted = lodash.reverse(lodash.sortBy(withValues, 'origin'));\n  const sliceIndex = sorted.findIndex((v, index) => lodash.sumBy(sorted.slice(0, index + 1), 'value') >= count);\n  return sorted.slice(0, sliceIndex);\n};\n\nconst asteriskOrder = string => string.replace(/^(\\d{7})\\d+(\\d{7})$/, '$1*****$2');\n\nconst asteriskName = string => string.replace(/^(\\S).*(\\S)$/, '$1***$2');\n\nconst generate = (() => {\n  const meta = {\n    reviews: {\n      index: 0,\n      pool: reviewsPool,\n    },\n    returns: {\n      index: 0,\n      pool: returnsPool,\n    },\n    orders: {\n      index: 0,\n      pool: ordersPool,\n    },\n  };\n  const date = formatDate();\n  const getItems = (key, count = 3) => {\n    const { index, pool } = meta[key];\n    const start = index + count >= pool.length ? 0 : index;\n    const end = start + count;\n    meta[key].index = end;\n\n    return pool.slice(start, end).map(item => ({\n      ...item,\n      date,\n      orderId: item.orderId && asteriskOrder(item.orderId),\n      userName: item.userName && asteriskName(item.userName),\n    }));\n  };\n  return (current) => {\n    const recordCount = Math.floor(random(3, 20));\n\n    return {\n      ...current,\n      areas: getAreas(Math.floor(recordCount / 3)),\n      reviews: getItems('reviews'),\n      orders: getItems('orders'),\n      returns: getItems('returns'),\n      ranks: getRanks(current.ranks),\n      recordCount,\n      reviewsCount: limit(current.reviewsCount + random(-0.005, 0.005), 0.83, 0.88),\n      onlineCount: Math.floor(random(800, 1200)),\n      returnRatio: limit(3.465 + random(-0.0008, 0.0008), 3.4, 3.5),\n      complaintRatio: limit(1.435 + random(-0.0008, 0.0008), 1.4, 1.5),\n    };\n  };\n})();\n\ndelay(generate);\ndelay(generate, 3000, true);\n\nexport default source;\n","/* eslint object-curly-newline: 0 */\n\nimport React, { Component } from 'react';\nimport MapChart from './components/MapChart';\nimport Title from './components/Title';\nimport Label from './components/Label';\nimport Progress from './components/Progress';\nimport PanelChart from './components/PanelChart';\nimport RankChart from './components/RankChart';\nimport Table from './components/Table';\nimport dataSource from './data/source';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    recordCount: 0,\n    reviewsCount: 0,\n    onlineCount: 0,\n    returnRatio: 0,\n    complaintRatio: 0,\n    reviews: [],\n    orders: [],\n    returns: [],\n    ranks: [],\n    areas: [],\n  }\n  componentDidMount() {\n    this.dataSource = dataSource;\n    this.dataSource.subscribe((state) => {\n      this.setState(state);\n    });\n  }\n  componentWillUnmount() {\n    this.dataSource.unsubscribe();\n  }\n  render() {\n    const width = 1250;\n    const height = 570;\n    const headerHeight = 64;\n    const {\n      recordCount, reviewsCount, onlineCount, returnRatio, complaintRatio,\n      reviews, orders, ranks, areas, returns,\n    } = this.state;\n    return (\n      <svg className=\"app\" viewBox={`0 0 ${width} ${height}`}>\n        <g>\n          <text x={width / 2} y=\"32\" textAnchor=\"middle\" alignmentBaseline=\"central\" fill=\"#fff\" fontSize=\"28\">\n            某妆数据交换平台\n          </text>\n          <line x1={0} y1={headerHeight + 1} x2={width} y2={headerHeight + 1} stroke=\"#161432\" />\n        </g>\n        <g\n          className=\"main\"\n          transform={`translate(0, ${headerHeight})`}\n        >\n          <g className=\"day\">\n            <g transform=\"translate(35, 35)\">\n              <Title>当天实时用户评价 / CUSTOMER REVIEWS</Title>\n              <PanelChart\n                max={100}\n                value={reviewsCount}\n                transform=\"translate(65, 80)\"\n              />\n              <Label\n                label=\"当前实时在线人数：\"\n                value={onlineCount}\n                dot\n                transform=\"translate(135, 80)\"\n              />\n              <Table\n                meta={[\n                  { name: 'userName', label: '用户名', width: 55 },\n                  { name: 'itemName', label: '商品名', width: 60, ellipsis: true },\n                  { name: 'date', label: '评价时间', width: 60 },\n                  { name: 'text', label: '评价内容', width: 140, ellipsis: true },\n                ]}\n                list={reviews}\n                transform=\"translate(0, 150)\"\n              />\n              <Title transform=\"translate(0, 300)\">当天实时支付订单 / PAYMENT</Title>\n              <Table\n                meta={[\n                  { name: 'orderId', label: '订单号', width: 120 },\n                  { name: 'itemName', label: '商品名', width: 80, ellipsis: true },\n                  { name: 'userName', label: '购买人', width: 55 },\n                  { name: 'date', label: '购买时间', width: 60 },\n                ]}\n                list={orders}\n                transform=\"translate(0, 325)\"\n              />\n            </g>\n          </g>\n          <MapChart\n            className=\"map-chart\"\n            dataset={areas}\n            width={550}\n            height={505}\n            records={recordCount}\n            transform={`translate(${(width - 550) / 2}, 0)`}\n          />\n          <g className=\"month\">\n            <g transform=\"translate(917, 35)\">\n              <Title>当月实时退货情况 / RETURN SITUATION</Title>\n              <Label\n                label=\"全网退货率：\"\n                value={returnRatio}\n                decimal={3}\n                dot\n                percent\n                transform=\"translate(8, 30)\"\n              />\n              <Progress value={returnRatio} transform=\"translate(18, 50)\" />\n              <Label\n                label=\"退货品类排行：\"\n                dot\n                transform=\"translate(8, 80)\"\n              />\n              <RankChart\n                list={ranks}\n                transform=\"translate(20, 95)\"\n              />\n              <Title transform=\"translate(0, 230)\">当月实时投诉情况 / COMPLAINT SITUATION</Title>\n              <Label\n                label=\"全网投诉率：\"\n                value={complaintRatio}\n                decimal={3}\n                dot\n                percent\n                transform=\"translate(8, 260)\"\n              />\n              <Progress value={complaintRatio} transform=\"translate(18, 280)\" />\n              <Label\n                label=\"全网退货商品\"\n                dot\n                transform=\"translate(8, 310)\"\n              />\n              <Table\n                meta={[\n                  { name: 'orderId', label: '订单号', width: 120 },\n                  { name: 'itemName', label: '商品名', width: 100, ellipsis: true },\n                  { name: 'userName', label: '购买人', width: 70 },\n                ]}\n                list={returns}\n                transform=\"translate(8, 330)\"\n              />\n            </g>\n          </g>\n        </g>\n      </svg>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable */\n\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ');\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}